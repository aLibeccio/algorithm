双向链表，如果不循环，那么第一个节点的prev域和最后一个节点的next域都为NULL，注意不能将它们设为list->head和list->tail，这样会造成头节点自身循环，尾节点自身循环。给其他操作带来不便。

双向链表，如果循环，那么第一个节点的prev域指向tail，最后一个节点的next域指向head。说实话，这种结构并没有看到太多的好处，也许方便了查询，但只是把O(n)的常数因子减小了，数量级仍然是一样的。反而在处理的时候，需要更加小心，因为有可能造成无限循环。

---------------

单向链表，在Delete操作中，不能引用Search操作。因为即使得到了Search返回的Node指针，也无法访问该节点的前驱节点，从而无法更新指针。这种情况在双向链表中就不存在。

